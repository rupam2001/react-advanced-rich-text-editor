[{"E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\index.js":"1","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\reportWebVitals.js":"2","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\App.js":"3","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\components\\leftPanel.js":"4","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\components\\editor.js":"5","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\contexts\\mainContext.js":"6","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\components\\folder.js":"7","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\index.js":"8","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\reportWebVitals.js":"9","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\App.js":"10","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\components\\editor.js":"11","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\components\\editor2.js":"12","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\components\\language.js":"13"},{"size":613,"mtime":1610566956887,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1909,"mtime":1610567627541,"results":"17","hashOfConfig":"15"},{"size":1525,"mtime":1610562596438,"results":"18","hashOfConfig":"15"},{"size":3054,"mtime":1610567608370,"results":"19","hashOfConfig":"15"},{"size":1010,"mtime":1610566589867,"results":"20","hashOfConfig":"15"},{"size":2776,"mtime":1610566383640,"results":"21","hashOfConfig":"15"},{"size":500,"mtime":1610693377271,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":230,"mtime":1610816454959,"results":"25","hashOfConfig":"23"},{"size":7087,"mtime":1610735444622,"results":"26","hashOfConfig":"23"},{"size":13374,"mtime":1611641045722,"results":"27","hashOfConfig":"23"},{"size":79,"mtime":1610899275615,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"ja36nw",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1uf4g9e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\index.js",[],["62","63"],"E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\reportWebVitals.js",[],"E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\App.js",["64","65","66"],"import Editor from \"./components/editor\";\nimport LeftPanel from \"./components/leftPanel\";\nimport MainContextProvider, { MainContext } from './contexts/mainContext'\n\nimport \"./App.css\"\n\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport { useContext, useState } from \"react\";\n\n\n\nfunction App() {\n\n  const [baseUrl, setBaseUrl] = useState(null);\n  const [load, setLoad] = useState(false);\n  const [branch, setBranch] = useState(\"master\")\n\n  const [night, setNight] = useState(true)\n\n  const mainContext = useContext(MainContext)\n\n\n\n  return (\n\n    <div className=\"App\">\n      <div className=\"app-header\">\n\n        <input value={baseUrl} onChange={(e) => { setBaseUrl(e.target.value) }} className=\"app-baseurl\" placeholder=\"Public github repo Base url\" />\n\n        <input value={branch} onChange={(e) => { setBranch(e.target.value) }} />\n        <button onClick={() => { setLoad(!load) }}>Go!</button>\n\n        <i class=\"fa fa-moon\" aria-hidden=\"true\"\n          onClick={() => {\n            changeTheme(night);\n            mainContext.setCurrentIDETheme(night ? \"twilight\" : \"tomorrow\")\n            setNight(!night);\n\n          }}\n        ></i>\n\n      </div>\n\n      <div className=\"app-holder\">\n\n        <div className=\"app-lpanel\">\n          <LeftPanel baseUrl={baseUrl} load={load} branch={branch} />\n        </div>\n\n        <div className=\"app-editor\">\n          <Editor />\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\nconst changeTheme = (night) => {\n  if (night) {\n    document.body.style.setProperty(\"--primary\", \"black\");\n    document.body.style.setProperty(\"--secondary\", \"grey\");\n    document.body.style.setProperty(\"--thirdary\", \"rgb(39, 38, 38)\");\n\n  } else {\n    document.body.style.setProperty(\"--primary\", \"white\");\n    document.body.style.setProperty(\"--secondary\", \"black\");\n    document.body.style.setProperty(\"--thirdary\", \"rgb(243, 243, 243)\");\n  }\n}\n","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\components\\leftPanel.js",["67"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { MainContext } from '../contexts/mainContext';\r\n\r\nimport \"../styles/leftpanel.css\"\r\nimport Folder from './folder';\r\n\r\n\r\n\r\nexport default function LeftPanel({ load, baseUrl, branch }) {\r\n\r\n    const [tree, setTree] = useState([])\r\n    const mainContext = useContext(MainContext)\r\n\r\n    const getRoot = () => {\r\n        fetchRootTreeAsync(baseUrl, branch)\r\n            .then(res => {\r\n                if (res.tree) {\r\n                    setTree(res.tree)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                alert(\"Something went wrong:(\")\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!baseUrl) return\r\n        mainContext.clear()\r\n        setTree([])\r\n        getRoot();\r\n    }, [load])\r\n\r\n\r\n    return (\r\n        <div className=\"lp-main\">\r\n            {\r\n                tree.map(node => (\r\n                    <Folder _nodeData={node} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst fetchRootTreeAsync = async (url, branch = \"master\") => {\r\n    //formate it to api.github....   \r\n    const routes = url.split(\"/\")\r\n    const len = routes.length\r\n    const userName = routes[len - 2]\r\n    const repo = routes[len - 1]\r\n\r\n    const finalUrl = `https://api.github.com/repos/${userName}/${repo}/git/trees/${branch}`\r\n\r\n\r\n\r\n\r\n    const res = await fetch(finalUrl, { method: \"GET\", headers: { 'Content-Type': 'application/json' } }).then(response => response.json())\r\n    return res\r\n}","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\components\\editor.js",["68","69"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { MainContext } from '../contexts/mainContext';\r\nimport \"../styles/editor.css\"\r\n\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-python\"\r\nimport \"ace-builds/src-noconflict/mode-java\"\r\nimport \"ace-builds/src-noconflict/mode-javascript\"\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\"\r\nimport \"ace-builds/src-noconflict/mode-golang\"\r\nimport \"ace-builds/src-noconflict/mode-yaml\"\r\nimport \"ace-builds/src-noconflict/mode-tsx\"\r\nimport \"ace-builds/src-noconflict/mode-html\"\r\nimport \"ace-builds/src-noconflict/mode-php\"\r\nimport \"ace-builds/src-noconflict/mode-ruby\"\r\nimport \"ace-builds/src-noconflict/mode-rust\"\r\nimport \"ace-builds/src-noconflict/mode-sql\"\r\nimport \"ace-builds/src-noconflict/mode-css\"\r\nimport \"ace-builds/src-noconflict/mode-sass\"\r\nimport \"ace-builds/src-noconflict/mode-markdown\"\r\n\r\n\r\n\r\nimport \"ace-builds/src-noconflict/theme-github\"\r\nimport \"ace-builds/src-noconflict/theme-ambiance\"\r\nimport \"ace-builds/src-noconflict/theme-solarized_dark\"\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/theme-terminal\"\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\"\r\nimport \"ace-builds/src-noconflict/theme-twilight\"\r\n\r\nexport default function Editor() {\r\n\r\n\r\n    const mainContext = useContext(MainContext)\r\n\r\n    const [text, setText] = useState(null)\r\n\r\n    const [mode, setMode] = useState(\"\")\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!mainContext.currentEditorDataRaw) {\r\n            setText(null)\r\n            return\r\n        }\r\n        const raw = mainContext.currentEditorDataRaw\r\n        let decoded = atob(raw)\r\n\r\n        if (mainContext.currentOpenExtention in { \"png\": 1, \"jpg\": 1 }) {\r\n            decoded = raw\r\n        }\r\n\r\n        setText(decoded)\r\n\r\n        setMode(extentionToMode(mainContext.currentOpenExtention))\r\n\r\n    }, [mainContext.currentEditorDataRaw])\r\n\r\n    if (mainContext.currentOpenExtention in { \"png\": 1, \"jpg\": 1 })\r\n        return (\r\n            <div className=\"ed-main\">\r\n                <img src={\"data:image/png;base64, \" + text}>\r\n\r\n                </img>\r\n            </div>\r\n        )\r\n\r\n    return (\r\n        <div className=\"ed-main\">\r\n            <AceEditor\r\n                mode={mode}\r\n                theme={mainContext.currentIDETheme}\r\n                value={text}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                editorProps={{ $blockScrolling: true }}\r\n                style={{\r\n                    height: '100%',\r\n                    width: '100%'\r\n                }}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                height={\"100%\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst extentionToMode = (ext) => {\r\n    switch (ext) {\r\n        case \"js\":\r\n            return \"javascript\"\r\n        case \"py\":\r\n            return \"python\"\r\n        case \"ts\":\r\n            return \"typescript\"\r\n        case \"md\":\r\n            return \"markdown\"\r\n\r\n\r\n        default:\r\n            return ext\r\n\r\n    }\r\n}","E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\contexts\\mainContext.js",[],"E:\\ALLS\\REACTS\\GITHUB IDEVIEW\\ideview\\src\\components\\folder.js",["70","71","72","73"],"import React, { useContext, useState } from 'react';\r\nimport { MainContext } from '../contexts/mainContext';\r\n\r\n\r\nexport default function Folder({ _nodeData }) {\r\n\r\n    const [nodeData, setNodeData] = useState(_nodeData);\r\n\r\n    const [tree, setTree] = useState([])\r\n\r\n    const mainContext = useContext(MainContext)\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleExpand = () => {\r\n\r\n        setIsOpen(!isOpen);\r\n        setLoading(true)\r\n        fetchNextTreeAsync(_nodeData.url)\r\n            .then(res => {\r\n                if (res.tree) {\r\n                    setTree(res.tree)\r\n                }\r\n                else if (res.content) {\r\n                    const ext = nodeData.path.split(\".\")[nodeData.path.split(\".\").length - 1]\r\n                    // alert(ext)\r\n                    mainContext.setCurrentOpenExtention(ext)\r\n                    mainContext.setCurrentEditorDataRaw(res.content)\r\n                    mainContext.setCurrentOpenBlob(nodeData)\r\n\r\n                }\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                setIsOpen(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"fl-main\">\r\n            <div className=\"fl-title\" onClick={handleExpand}>\r\n\r\n                {getIcon(nodeData, isOpen, mainContext.currentOpenBlob?.sha)}\r\n                <p>{_nodeData.path}</p>\r\n                {\r\n                    loading &&\r\n                    <p className=\"fl-loading\">(loading..)</p>\r\n                }\r\n            </div>\r\n            {\r\n                isOpen &&\r\n                <div className=\"fl-subs\" >\r\n                    {\r\n                        tree.map(node => (\r\n                            <Folder _nodeData={node} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst fetchNextTreeAsync = async (url) => {\r\n    //formate it to api.github....                                     >>>>>>>>>>>>>>>pending\r\n    const res = await fetch(url, { method: \"GET\", headers: { 'Content-Type': 'application/json' } }).then(response => response.json())\r\n    return res\r\n}\r\n\r\nconst getIcon = (data, isOpen, sha) => {\r\n\r\n    if (data.type == 'tree') {\r\n\r\n        if (isOpen)\r\n            return (<i class=\"fa fa-folder-open\" aria-hidden=\"true\"></i>)\r\n\r\n        return (<i class=\"fa fa-folder\" aria-hidden=\"true\"></i>)\r\n    }\r\n    if (data.type == 'blob') {\r\n\r\n        if (isOpen && sha == data.sha)\r\n            return (<i class=\"fa fa-file\" aria-hidden=\"true\" style={{ color: 'rgb(0, 140, 255)' }}></i>)\r\n\r\n        return (\r\n            <i class=\"fa fa-file\" aria-hidden=\"true\"></i>\r\n        )\r\n    }\r\n}","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\index.js",[],["74","75"],"E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\reportWebVitals.js",[],"E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\App.js",[],"E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\components\\editor.js",["76","77","78","79","80","81","82","83","84","85"],"E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\components\\editor2.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport \"./editor.css\"\r\n\r\nexport default function Editor({ languages }) {\r\n\r\n    const textBoxRef = useRef(null)\r\n    const [selectedText, setSelectedText] = useState(null)\r\n    const [selectedTextRange, setSelectedTextRange] = useState({ start: 0, end: 0 })\r\n    const [windowSelection, setWindowSelection] = useState(null)\r\n    const [selectedNode, setSelectedNode] = useState(null)\r\n    const [currentParentsMap, setCurrentParentsMap] = useState({})\r\n    const [text, setText] = useState('')\r\n    const [selectedTextSize, setSelectedTextSize] = useState(null)\r\n\r\n    const [currentCustomeColor, setCurrentCustomeColor] = useState(null)\r\n\r\n    const [customColors, setCustomColors] = useState([])\r\n\r\n    const [currentLanguage, setCurrentLanguage] = useState({})\r\n\r\n    const [currentSuggestion, setCurrentSuggestion] = useState([])\r\n\r\n    const [prevText, setPrevText] = useState('')\r\n\r\n    const [keyPos, setKeyPos] = useState({ key: \"\", pos: 0 })\r\n\r\n    let _keyPos = { key: \"\", pos: 0 }\r\n\r\n    useEffect(() => {\r\n        textBoxRef.current.addEventListener(\"keydown\", (event) => {\r\n\r\n\r\n\r\n            if (event.ctrlKey && event.keyCode == 66) {\r\n                ApplyBold();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n\r\n            console.log(currentLanguage)\r\n            if (currentLanguage.hasOwnProperty(event.key)) {\r\n                console.log(event.key)\r\n\r\n\r\n                setCurrentSuggestion(currentLanguage[event.key])\r\n                event.preventDefault()\r\n                let curPos = getCaretIndex(textBoxRef.current)\r\n                console.log(curPos)\r\n\r\n                const currentAlphaToShow = currentLanguage[event.key][0];\r\n                console.log(currentAlphaToShow, \"caph\")\r\n\r\n                textBoxRef.current.innerHTML = textBoxRef.current.innerHTML.slice(0, curPos) + currentAlphaToShow + textBoxRef.current.innerHTML.slice(curPos, textBoxRef.current.innerHTML.length - 1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n            } else {\r\n                setCurrentSuggestion([])\r\n            }\r\n        });\r\n        if (languages)\r\n            setCurrentLanguage(languages[0])\r\n\r\n        console.log(languages)\r\n\r\n    }, [languages])\r\n\r\n\r\n\r\n    const ApplyBold = () => {\r\n        document.execCommand(\"bold\", false, null)\r\n    }\r\n    const ApplyItalic = () => {\r\n        document.execCommand(\"italic\", false, null)\r\n    }\r\n    const ApplyUnderLine = () => {\r\n        document.execCommand(\"underline\", false, null)\r\n    }\r\n    const ApplyColor = (color) => {\r\n        document.execCommand(\"foreColor\", false, color)\r\n    }\r\n    const ApplyHighlighter = (color) => {\r\n        document.execCommand(\"hiliteColor\", false, color)\r\n    }\r\n    const ApplyJustifyCenter = () => {\r\n        document.execCommand(\"justifyCenter\", false, null);\r\n    }\r\n\r\n    const ApplyJustifyLeft = () => {\r\n        document.execCommand(\"justifyLeft\", false, null);\r\n    }\r\n    const ApplyUndo = () => {\r\n        document.execCommand(\"undo\", false, null);\r\n    }\r\n    const ApplyRedo = () => {\r\n        document.execCommand(\"redo\", false, null);\r\n    }\r\n\r\n    const ApplySizeInc = () => {\r\n\r\n        // setSelectedTextSize(selectedTextSize + 1)\r\n        document.execCommand(\"size\", false, \"54px\");\r\n\r\n\r\n    }\r\n    const ApplySizeDec = () => {\r\n\r\n    }\r\n\r\n    const handleTextChange = (e) => {\r\n        let char = e.target.innerHTML\r\n        setText(char)\r\n\r\n        const { x, y } = getCaretCoordinates()\r\n        console.log(x, y, \"cooords\")\r\n    }\r\n    const getSelectedTextSize = (selection) => {\r\n        if (selection) {\r\n\r\n            const size = window.getComputedStyle(selection.anchorNode.parentElement, null).getPropertyValue('font-size');\r\n            console.log(size, \"size\")\r\n            // let num = size.match(//g)\r\n            return size\r\n        }\r\n    }\r\n    const getSelectedText = () => {\r\n        let t = window.getSelection().toString()\r\n        setSelectedText(t)\r\n\r\n        setSelectedTextSize(getSelectedTextSize(window.getSelection()))\r\n\r\n        let start = window.getSelection().anchorOffset;\r\n        let end = window.getSelection().focusOffset;\r\n        if (start > end) {\r\n            let temp = start;\r\n            start = end;\r\n            end = temp;\r\n        }\r\n        setSelectedTextRange({ start, end })\r\n        setWindowSelection(window.getSelection().getRangeAt(0))\r\n\r\n        let node = window.getSelection().anchorNode;\r\n\r\n        setSelectedNode(node.parentNode)\r\n\r\n        setCurrentParentsMap(\r\n            findAllParentNodes(node.parentNode)\r\n        )\r\n    }\r\n    const findAllParentNodes = (node) => {\r\n        let nodeMap = {}\r\n        while (node) {\r\n            nodeMap[node.nodeName] = true\r\n            node = node.parentNode\r\n        }\r\n        return nodeMap\r\n    }\r\n\r\n\r\n    const addNewCustomeColor = (newColor) => {\r\n        if (customColors.length != 0 && newColor == customColors[customColors.length - 1]) return;\r\n        setCustomColors([...customColors, newColor])\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ed-wrapper\">\r\n            <div className=\"ed-tools\">\r\n                <button onClick={ApplyBold} className=\"ed-tool-btn\">\r\n                    <i className={currentParentsMap.hasOwnProperty(\"B\") ? \"fa fa-bold active\" : \"fa fa-bold\"} aria-hidden=\"true\" id=\"bold\"></i>\r\n                </button>\r\n\r\n                <button onClick={ApplyItalic} className=\"ed-tool-btn\">\r\n                    <i className={currentParentsMap.hasOwnProperty(\"I\") ? \"fa fa-italic active\" : \"fa fa-italic\"} aria-hidden=\"true\" id=\"italic\"></i>\r\n                </button>\r\n\r\n                <button onClick={ApplyUnderLine} className=\"ed-tool-btn\">\r\n                    <i className={currentParentsMap.hasOwnProperty(\"U\") ? \"fa fa-underline active\" : \"fa fa-underline\"} aria-hidden=\"true\" id=\"underline\"></i>\r\n                </button>\r\n\r\n                <div class=\"dropdown\">\r\n                    <button class=\"dropbtn\">\r\n                        <i class=\"fa fa-paint-brush\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-caret-down\"></i>\r\n                    </button>\r\n                    <div class=\"dropdown-content\">\r\n                        <div className=\"ed-custome-colors\">\r\n                            {\r\n                                colors.map(c => (\r\n                                    <button onClick={() => ApplyColor(c)} >\r\n                                        <a style={{ color: c }} >A</a>\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"ed-tool-color-wrapper\">\r\n                            <span>custom</span>\r\n                            <button onClick={() => { }} >\r\n                                <input type=\"color\" className=\"ed-tool-color-input\"\r\n                                    onBlur={(e) => {\r\n                                        addNewCustomeColor(e.target.value)\r\n                                    }} ></input>\r\n                            </button>\r\n                            <div className=\"ed-custome-colors\">\r\n                                {\r\n                                    customColors.map(c => (\r\n                                        <button onClick={() => ApplyColor(c)} >\r\n                                            <a style={{ color: c }} >A</a>\r\n                                        </button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dropdown\">\r\n                    <button class=\"dropbtn\">\r\n                        <i class=\"fas fa-highlighter\"></i>\r\n                        <i class=\"fa fa-caret-down\"></i>\r\n                    </button>\r\n                    <div class=\"dropdown-content\">\r\n                        <div className=\"ed-custome-colors\">\r\n                            {\r\n                                colors.map(c => (\r\n                                    <button className=\"ed-tools-btn\" onClick={() => ApplyHighlighter(c)}>\r\n                                        <i class=\"fas fa-highlighter\" style={{ color: c }}></i>\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"ed-tool-color-wrapper\">\r\n                            <span>custom</span>\r\n                            <button onClick={() => { }} >\r\n                                <input type=\"color\" className=\"ed-tool-color-input\" onChange={(e) => { setCurrentCustomeColor(e.target.value) }}\r\n                                    onBlur={(e) => {\r\n                                        addNewCustomeColor(e.target.value)\r\n                                    }} ></input>\r\n                            </button>\r\n                            <div className=\"ed-custome-colors\">\r\n                                {\r\n                                    customColors.map(c => (\r\n                                        <button onClick={() => ApplyHighlighter(c)} >\r\n                                            <i className=\"fa fa-highlighter\" style={{ color: c }} ></i>\r\n                                        </button>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <button className=\"ed-tool-btn\" onClick={ApplyJustifyLeft}>\r\n                    <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button className=\"ed-tool-btn\" onClick={ApplyJustifyCenter}>\r\n                    <i class=\"fa fa-align-center\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button className=\"ed-tool-btn\" onClick={ApplyUndo}>\r\n                    <i class=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button className=\"ed-tool-btn\" onClick={ApplyRedo}>\r\n                    <i class=\"fa fa-redo\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                {/* <div className=\"ed-tools-group\">\r\n                    <button className=\"ed-tool-btn\" onClick={ApplySizeDec}>\r\n                        <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <button className=\"ed-tool-btn\">\r\n                        <i class=\"fa fa-font\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <button className=\"ed-tool-btn\" onClick={ApplySizeInc}>\r\n                        <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div> */}\r\n\r\n            </div>\r\n\r\n            <div style={{ position: 'relative' }}>\r\n\r\n                <div className=\"ed-main\" innerHTML={text} contentEditable={true} id=\"ed-main\" ref={textBoxRef} onInput={handleTextChange} onMouseUp={getSelectedText} spellCheck=\"false\">\r\n                </div>\r\n                <div className=\"ed-suggestion\">\r\n                    {\r\n                        currentSuggestion.map(alpha => (\r\n                            <span>{alpha}</span>\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst bold = (text, style) => `<span style=\"font-weight:bold;${style}\" id=\"bold\">${text}</span>`\r\n\r\nconst colors = [\r\n    \"red\", \"blue\", \"green\", \"black\", \"orange\", \"purple\", \"yello\", \"aqua\", \"grey\", \"fuchsia\", \"gray\", \"green\", \"lime\", \"maroon\", \"silver\", \"teal\", \"olive\"\r\n]\r\n\r\nconst getDifference = (str1, str2) => {\r\n    let smaller = str1.length > str2.length ? str2.length : str1.length\r\n    for (let i = 0; i < smaller; i++) {\r\n        if (str1[i] != str2[i]) return i\r\n    }\r\n    return -1\r\n}\r\n\r\n\r\nfunction getCaretCoordinates() {\r\n    let x = 0,\r\n        y = 0;\r\n    const isSupported = typeof window.getSelection !== \"undefined\";\r\n    if (isSupported) {\r\n        const selection = window.getSelection();\r\n        if (selection.rangeCount !== 0) {\r\n            const range = selection.getRangeAt(0).cloneRange();\r\n            range.collapse(true);\r\n            const rect = range.getClientRects()[0];\r\n            if (rect) {\r\n                x = rect.left;\r\n                y = rect.top;\r\n            }\r\n        }\r\n    }\r\n    return { x, y };\r\n}\r\nfunction getCaretIndex(element) {\r\n    let position = 0;\r\n    const isSupported = typeof window.getSelection !== \"undefined\";\r\n    if (isSupported) {\r\n        const selection = window.getSelection();\r\n        if (selection.rangeCount !== 0) {\r\n            const range = window.getSelection().getRangeAt(0);\r\n            const preCaretRange = range.cloneRange();\r\n            preCaretRange.selectNodeContents(element);\r\n            preCaretRange.setEnd(range.endContainer, range.endOffset);\r\n            position = preCaretRange.toString().length;\r\n        }\r\n    }\r\n    return position;\r\n}\r\nfunction setCaret(el, pos) {\r\n\r\n    var range = document.createRange()\r\n    var sel = window.getSelection()\r\n\r\n    range.setStart(el.childNodes[pos], 5)\r\n    range.collapse(true)\r\n\r\n    sel.removeAllRanges()\r\n    sel.addRange(range)\r\n}","E:\\ALLS\\REACTS\\advanced Editor\\Advanced Editor\\src\\components\\language.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":27},{"ruleId":"113","severity":1,"message":"117","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":19},{"ruleId":"113","severity":1,"message":"118","line":7,"column":21,"nodeType":"115","messageId":"116","endLine":7,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":31,"column":8,"nodeType":"121","endLine":31,"endColumn":14,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":62,"column":8,"nodeType":"121","endLine":62,"endColumn":42,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":67,"column":17,"nodeType":"127","endLine":67,"endColumn":61},{"ruleId":"113","severity":1,"message":"128","line":7,"column":22,"nodeType":"115","messageId":"116","endLine":7,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":75,"column":19,"nodeType":"131","messageId":"132","endLine":75,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":82,"column":19,"nodeType":"131","messageId":"132","endLine":82,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":84,"column":27,"nodeType":"131","messageId":"132","endLine":84,"endColumn":29},{"ruleId":"109","replacedBy":"133"},{"ruleId":"111","replacedBy":"134"},{"ruleId":"113","severity":1,"message":"135","line":12,"column":12,"nodeType":"115","messageId":"116","endLine":12,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":18,"column":48,"nodeType":"131","messageId":"132","endLine":18,"endColumn":50},{"ruleId":"119","severity":1,"message":"136","line":26,"column":8,"nodeType":"121","endLine":26,"endColumn":10,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"130","line":30,"column":35,"nodeType":"131","messageId":"132","endLine":30,"endColumn":37},{"ruleId":"129","severity":1,"message":"130","line":40,"column":48,"nodeType":"131","messageId":"132","endLine":40,"endColumn":50},{"ruleId":"129","severity":1,"message":"130","line":58,"column":48,"nodeType":"131","messageId":"132","endLine":58,"endColumn":50},{"ruleId":"129","severity":1,"message":"130","line":75,"column":48,"nodeType":"131","messageId":"132","endLine":75,"endColumn":50},{"ruleId":"129","severity":1,"message":"130","line":92,"column":48,"nodeType":"131","messageId":"132","endLine":92,"endColumn":50},{"ruleId":"138","severity":1,"message":"139","line":178,"column":33,"nodeType":"127","endLine":178,"endColumn":88},{"ruleId":"113","severity":1,"message":"140","line":193,"column":7,"nodeType":"115","messageId":"116","endLine":193,"endColumn":11},{"ruleId":"113","severity":1,"message":"141","line":7,"column":12,"nodeType":"115","messageId":"116","endLine":7,"endColumn":24},{"ruleId":"113","severity":1,"message":"142","line":8,"column":12,"nodeType":"115","messageId":"116","endLine":8,"endColumn":29},{"ruleId":"113","severity":1,"message":"143","line":9,"column":12,"nodeType":"115","messageId":"116","endLine":9,"endColumn":27},{"ruleId":"113","severity":1,"message":"144","line":10,"column":12,"nodeType":"115","messageId":"116","endLine":10,"endColumn":24},{"ruleId":"113","severity":1,"message":"145","line":13,"column":12,"nodeType":"115","messageId":"116","endLine":13,"endColumn":28},{"ruleId":"113","severity":1,"message":"146","line":15,"column":12,"nodeType":"115","messageId":"116","endLine":15,"endColumn":31},{"ruleId":"113","severity":1,"message":"147","line":23,"column":12,"nodeType":"115","messageId":"116","endLine":23,"endColumn":20},{"ruleId":"113","severity":1,"message":"148","line":23,"column":22,"nodeType":"115","messageId":"116","endLine":23,"endColumn":33},{"ruleId":"113","severity":1,"message":"149","line":25,"column":12,"nodeType":"115","messageId":"116","endLine":25,"endColumn":18},{"ruleId":"113","severity":1,"message":"150","line":25,"column":20,"nodeType":"115","messageId":"116","endLine":25,"endColumn":29},{"ruleId":"113","severity":1,"message":"151","line":27,"column":9,"nodeType":"115","messageId":"116","endLine":27,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":34,"column":48,"nodeType":"131","messageId":"132","endLine":34,"endColumn":50},{"ruleId":"119","severity":1,"message":"152","line":69,"column":8,"nodeType":"121","endLine":69,"endColumn":19,"suggestions":"153"},{"ruleId":"113","severity":1,"message":"154","line":102,"column":11,"nodeType":"115","messageId":"116","endLine":102,"endColumn":23},{"ruleId":"113","severity":1,"message":"155","line":109,"column":11,"nodeType":"115","messageId":"116","endLine":109,"endColumn":23},{"ruleId":"129","severity":1,"message":"156","line":164,"column":33,"nodeType":"131","messageId":"132","endLine":164,"endColumn":35},{"ruleId":"129","severity":1,"message":"130","line":164,"column":50,"nodeType":"131","messageId":"132","endLine":164,"endColumn":52},{"ruleId":"138","severity":1,"message":"139","line":195,"column":41,"nodeType":"127","endLine":195,"endColumn":66},{"ruleId":"138","severity":1,"message":"139","line":212,"column":45,"nodeType":"127","endLine":212,"endColumn":70},{"ruleId":"113","severity":1,"message":"140","line":306,"column":7,"nodeType":"115","messageId":"116","endLine":306,"endColumn":11},{"ruleId":"113","severity":1,"message":"157","line":312,"column":7,"nodeType":"115","messageId":"116","endLine":312,"endColumn":20},{"ruleId":"129","severity":1,"message":"156","line":315,"column":21,"nodeType":"131","messageId":"132","endLine":315,"endColumn":23},{"ruleId":"113","severity":1,"message":"158","line":354,"column":10,"nodeType":"115","messageId":"116","endLine":354,"endColumn":18},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'MainContextProvider' is defined but never used.","Identifier","unusedVar","'Resizable' is defined but never used.","'ResizableBox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'baseUrl', 'getRoot', and 'mainContext'. Either include them or remove the dependency array.","ArrayExpression",["161"],"React Hook useEffect has a missing dependency: 'mainContext.currentOpenExtention'. Either include it or remove the dependency array.",["162"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setNodeData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["159"],["160"],"'text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ApplyBold'. Either include it or remove the dependency array.",["163"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'bold' is assigned a value but never used.","'selectedText' is assigned a value but never used.","'selectedTextRange' is assigned a value but never used.","'windowSelection' is assigned a value but never used.","'selectedNode' is assigned a value but never used.","'selectedTextSize' is assigned a value but never used.","'currentCustomeColor' is assigned a value but never used.","'prevText' is assigned a value but never used.","'setPrevText' is assigned a value but never used.","'keyPos' is assigned a value but never used.","'setKeyPos' is assigned a value but never used.","'_keyPos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentLanguage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentSuggestion' needs the current value of 'currentLanguage'.",["164"],"'ApplySizeInc' is assigned a value but never used.","'ApplySizeDec' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'getDifference' is assigned a value but never used.","'setCaret' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [baseUrl, getRoot, load, mainContext]",{"range":"173","text":"174"},"Update the dependencies array to be: [mainContext.currentEditorDataRaw, mainContext.currentOpenExtention]",{"range":"175","text":"176"},"Update the dependencies array to be: [ApplyBold]",{"range":"177","text":"178"},"Update the dependencies array to be: [currentLanguage, languages]",{"range":"179","text":"180"},[796,802],"[baseUrl, getRoot, load, mainContext]",[1891,1925],"[mainContext.currentEditorDataRaw, mainContext.currentOpenExtention]",[846,848],"[ApplyBold]",[2250,2261],"[currentLanguage, languages]"]